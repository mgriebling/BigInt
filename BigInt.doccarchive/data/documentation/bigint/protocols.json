{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"BigInt supports Apple’s ","type":"text"},{"type":"codeVoice","code":"SignedInteger"},{"type":"text","text":", "},{"code":"BinaryInteger","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Numeric"},{"type":"text","text":" protocols."}],"seeAlsoSections":[{"anchor":"Articles","identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"],"title":"Articles","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/protocols"]}],"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"BigInt"}],"role":"article","title":"Protocols and Additions"},"identifier":{"url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"BigInt (with protocols) now includes support for "},{"code":"StaticBigInt","type":"codeVoice"},{"text":" number initialization","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with macOS 13.3+, iOS 16.4+, tvOS 16.4+, watchOS 9.4+, macCatalyst(“13.0”)"},{"type":"text","text":" "},{"type":"text","text":"Note: These extensions require renaming "},{"type":"codeVoice","code":"magnitude"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"_magnitude"},{"text":" to avoid conflict with the","type":"text"},{"text":" ","type":"text"},{"code":"Numeric","type":"codeVoice"},{"type":"text","text":" protocol variable also called "},{"type":"codeVoice","code":"magnitude"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Why support protocols? By supporting them you gain the ability to"},{"type":"text","text":" "},{"type":"text","text":"formulate generic algorithms and make use of algorithms from others"},{"text":" ","type":"text"},{"text":"that use the protocol type(s) you support. For example, ","type":"text"},{"code":"Strideable","type":"codeVoice"},{"type":"text","text":" "},{"text":"compliance is free (with ","type":"text"},{"type":"codeVoice","code":"BinaryInteger"},{"text":") and lets you do things like","type":"text"}]},{"syntax":"swift","code":["for i in BInt(1)...10 {","   print(i.words)","}"],"type":"codeListing"},{"inlineContent":[{"text":"The main header also","type":"text"},{"type":"text","text":" "},{"type":"text","text":"includes "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" compliance conformity (for free). Codable"},{"text":" ","type":"text"},{"type":"text","text":"compliance allows BInts to be distributed\/received or stored\/read as"},{"type":"text","text":" "},{"type":"text","text":"industry-standard JSONs."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Protocols mean you can support generic arguments:"},{"type":"text","text":" "},{"type":"text","text":"(e.g., "},{"code":"func * <T:BinaryInteger>(_ lhs: Self, rhs: T) -> Self","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"which works with "},{"type":"emphasis","inlineContent":[{"text":"all","type":"text"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":"BinaryIntegers"},{"type":"text","text":", including BigInt’s instead of"},{"type":"text","text":" "},{"type":"text","text":"just Ints or a single integer type."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, with support for StaticBigInt, initialization can now"},{"type":"text","text":" "},{"text":"use unlimited precision instead of requiring quoted numbers:","type":"text"}]},{"code":["let huge = BInt(12_345_678_901_234_567_890_123_456_789_012_345_678_901_234_567_890_123_456_789)","let hugeHex = BInt(0x1234_5678_9ABC_DEF0_1234_5678_9ABC_DEF0_1234_5678_9ABC_DEF0_1234_5678_9ABC_DEF0)","let hugeOctal = BInt(0o123_456_701_123_456_701_123_456_701_123_456_701_123_456_701_123_456_701)","let hugeBinary = BInt(0b10010101_01010101_01010101_01010010_10101000_01010111_11100101_01010101_01001010_10101010)","print(huge, \"0x\"+hugeHex.asString(radix: 16, uppercase: true), \"0o\"+hugeOctal.asString(radix: 8), ","        \"0b\"+hugeBinary.asString(radix: 2))"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"produces:","type":"text"}]},{"code":["12345678901234567890123456789012345678901234567890123456789 ","0x123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0 ","0o123456701123456701123456701123456701123456701123456701 ","0b10010101010101010101010101010010101010000101011111100101010101010100101010101010"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Finally, protocol support allows simplified extensions to the BigDecimal","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"package available "},{"identifier":"https:\/\/github.com\/mgriebling\/BigDecimal.git","isActive":true,"type":"reference"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"It contains a complete arbitrary-precision Decimal number implementation","type":"text"},{"type":"text","text":" "},{"text":"with support for standard 32-, 64-, and 128-bit decimal number formats.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://bigint.BigInt/documentation/BigInt/Algorithms":{"kind":"article","title":"Algorithms","role":"article","type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms","url":"\/documentation\/bigint\/algorithms","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}]},"doc://bigint.BigInt/documentation/BigInt/References":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","kind":"article","type":"topic","url":"\/documentation\/bigint\/references","title":"References","role":"article","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}]},"doc://bigint.BigInt/documentation/BigInt/AboutBFraction":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","url":"\/documentation\/bigint\/aboutbfraction","type":"topic","role":"article","kind":"article","abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"title":"About BFraction"},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","kind":"article","type":"topic","url":"\/documentation\/bigint\/aboutbint","title":"About BInt","role":"article","abstract":[{"type":"text","text":"Signed integers of unbounded size"}]},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","kind":"article","type":"topic","url":"\/documentation\/bigint\/aboutcrt","title":"About CRT","role":"article","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}]},"doc://bigint.BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","url":"\/documentation\/bigint\/performance","type":"topic","role":"article","kind":"article","abstract":[{"text":"Execution times for certain BigInt operations","type":"text"}],"title":"Performance"},"doc://bigint.BigInt/documentation/BigInt":{"title":"BigInt","abstract":[{"text":"Signed integers and fractions of unbounded size","type":"text"}],"kind":"symbol","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt","role":"collection","type":"topic","url":"\/documentation\/bigint"},"https://github.com/mgriebling/BigDecimal.git":{"title":"here","url":"https:\/\/github.com\/mgriebling\/BigDecimal.git","type":"link","identifier":"https:\/\/github.com\/mgriebling\/BigDecimal.git","titleInlineContent":[{"type":"text","text":"here"}]}}}