{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"metadata":{"role":"article","roleHeading":"Article","title":"Protocols","modules":[{"name":"BigInt"}]},"seeAlsoSections":[{"anchor":"Articles","title":"Articles","identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"],"generated":true}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"It now includes support for ","type":"text"},{"type":"codeVoice","code":"StaticBigInt"},{"type":"text","text":" number initialization."},{"type":"text","text":"\n"},{"text":"Note: These extensions require renaming ","type":"text"},{"code":"magnitude","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"_magnitude"},{"type":"text","text":" to avoid conflict with the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Numeric"},{"text":" protocol variable also called ","type":"text"},{"type":"codeVoice","code":"magnitude"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Why support protocols? By supporting them you gain the ability to"},{"type":"text","text":" "},{"type":"text","text":"formulate generic algorithms and make use of algorithms from others"},{"text":" ","type":"text"},{"type":"text","text":"that use the protocol type(s) you support. For example, "},{"code":"Strideable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"compliance is free (with "},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":") and lets you do things like"}]},{"type":"codeListing","code":["for i in BInt(1)...10 {","   print(i.words)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"The main header also"},{"type":"text","text":" "},{"type":"text","text":"includes "},{"type":"codeVoice","code":"Codable"},{"text":" compliance conformity (for free).  ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" ","type":"text"},{"type":"text","text":"compliance allows "},{"type":"codeVoice","code":"BInt"},{"type":"text","text":"s to be distributed\/received or stored\/read as"},{"text":" ","type":"text"},{"text":"JSONs instead of bunches of bytes that are inherently non-portable.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Protocols mean you can support generic arguments:"},{"type":"text","text":" "},{"type":"text","text":"(e.g., "},{"type":"codeVoice","code":"func * <T:BinaryInteger>(_ lhs: Self, rhs: T) -> Self"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"which works with all ","type":"text"},{"type":"codeVoice","code":"BinaryIntegers"},{"type":"text","text":", including "},{"code":"BigInt","type":"codeVoice"},{"type":"text","text":"s instead of"},{"type":"text","text":" "},{"text":"just ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":"s or a single integer type."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Finally, protocol support allows simplified extensions to the "},{"type":"codeVoice","code":"BigDecimal"},{"type":"text","text":" "},{"text":"package available ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/mgriebling\/BigDecimal.git","isActive":true},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It contains a complete arbitrary precision Decimal number implementation."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Its functionality falls in the following categories:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Arithmetic: addition, subtraction, multiplication, division, remainder and"},{"text":" ","type":"text"},{"type":"text","text":"exponentiation"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added arbitrary complex decimal number support with the "},{"type":"codeVoice","code":"CBDecimal"},{"type":"text","text":" type using"},{"type":"text","text":" "},{"type":"codeVoice","code":"swift-numerics"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compliant with "},{"code":"DecimalFloatingPoint","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Real"},{"type":"text","text":" protocols."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Constants: "},{"type":"codeVoice","code":"pi"},{"type":"text","text":", "},{"code":"zero","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"one"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ten"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Functions: exp, log, log10, log2, pow, sqrt, root, factorial, gamma,"},{"type":"text","text":" "},{"text":"trig + inverse, hyperbolic + inverse","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rounding and scaling according to one of the rounding modes:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"awayFromZero"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"down"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"towardZero","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"toNearestOrEven","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"toNearestOrAwayFromZero","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"up","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Comparison: the six standard operators ","type":"text"},{"code":"==","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"!="},{"text":", ","type":"text"},{"code":"<","type":"codeVoice"},{"text":", ","type":"text"},{"code":"<=","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":">"},{"type":"text","text":", and "},{"type":"codeVoice","code":">="}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conversion: to String, to Double, to Decimal (the Swift Foundation type), to"},{"text":" ","type":"text"},{"type":"text","text":"Decimal32 \/ Decimal64 \/ Decimal128"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support for Decimal32, Decimal64 and Decimal128 values stored as UInt32,"},{"type":"text","text":" "},{"text":"UInt64 and UInt128 values respectively, using Densely Packed Decimal (DPD)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoding or Binary Integer Decimal (BID) encoding"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support for Decimal32, Decimal64 and Decimal128 mathematical operations"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Supports the IEEE 754 concepts of Infinity and NaN (Not a Number) with the"},{"type":"text","text":" "},{"type":"text","text":"latter having a "},{"type":"codeVoice","code":"signaling"},{"type":"text","text":" option."}],"type":"paragraph"}]}]}]}],"variants":[{"paths":["\/documentation\/bigint\/protocols"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"BigInt supports Appleâ€™s "},{"code":"SignedInteger","type":"codeVoice"},{"type":"text","text":", "},{"code":"BinaryInteger","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and "},{"code":"Numeric","type":"codeVoice"},{"text":" protocols.","type":"text"}],"references":{"doc://bigint.BigInt/documentation/BigInt/Algorithms":{"kind":"article","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"title":"Algorithms","role":"article","url":"\/documentation\/bigint\/algorithms","type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"},"doc://bigint.BigInt/documentation/BigInt/Performance":{"type":"topic","title":"Performance","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","kind":"article","url":"\/documentation\/bigint\/performance","role":"article"},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","url":"\/documentation\/bigint\/aboutbint","title":"About BInt","type":"topic","role":"article","abstract":[{"type":"text","text":"Signed integers of unbounded size"}],"kind":"article"},"doc://bigint.BigInt/documentation/BigInt/AboutBFraction":{"type":"topic","abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"title":"About BFraction","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","kind":"article","url":"\/documentation\/bigint\/aboutbfraction","role":"article"},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","title":"About CRT","url":"\/documentation\/bigint\/aboutcrt","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}]},"doc://bigint.BigInt/documentation/BigInt":{"role":"collection","kind":"symbol","title":"BigInt","abstract":[{"text":"Signed integers and fractions of unbounded size","type":"text"}],"type":"topic","url":"\/documentation\/bigint","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt"},"doc://bigint.BigInt/documentation/BigInt/References":{"type":"topic","title":"References","url":"\/documentation\/bigint\/references","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","role":"article","kind":"article"},"https://github.com/mgriebling/BigDecimal.git":{"title":"here","type":"link","identifier":"https:\/\/github.com\/mgriebling\/BigDecimal.git","titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/github.com\/mgriebling\/BigDecimal.git"}}}